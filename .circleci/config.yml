# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
        - RAILS_ENV: test
        - PGHOST: 127.0.0.1
        - PGUSER: root

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6.2-alpine
        environment:
        - POSTGRES_USER: root
        - POSTGRES_DB: circle-test_test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run: sudo apt update && sudo apt install postgresql-client

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml


      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  # jobs for building/testing go here
  deploy-job:
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
    working_directory: /tmp/my-project
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |  # this command is framework-dependent and may vary
            git push --force https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git HEAD:refs/heads/master
            sleep 5  # sleep for 5 seconds to wait for dynos
            heroku restart

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-job:  # only deploy when master successfully builds
          requires:
            - build
          filters:
            branches:
              only: master
